-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.assets
(
    id serial NOT NULL,
    asset_code character varying(50) COLLATE pg_catalog."default" NOT NULL,
    asset_type character varying(50) COLLATE pg_catalog."default" NOT NULL,
    serial_number character varying(100) COLLATE pg_catalog."default",
    brand character varying(100) COLLATE pg_catalog."default",
    model character varying(100) COLLATE pg_catalog."default",
    status asset_status DEFAULT 'available'::asset_status,
    branch_id integer,
    assigned_person_id integer,
    purchase_date date,
    delivery_date date,
    received_date date,
    notes text COLLATE pg_catalog."default",
    attributes_json jsonb,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT assets_pkey PRIMARY KEY (id),
    CONSTRAINT assets_asset_code_key UNIQUE (asset_code),
    CONSTRAINT assets_serial_number_key UNIQUE (serial_number)
);

CREATE TABLE IF NOT EXISTS public.assignment_history
(
    id serial NOT NULL,
    asset_id integer NOT NULL,
    person_id integer NOT NULL,
    branch_id integer,
    assignment_date timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    return_date timestamp without time zone,
    delivery_condition condition_enum DEFAULT 'good'::condition_enum,
    return_condition condition_enum,
    delivery_notes text COLLATE pg_catalog."default",
    return_notes text COLLATE pg_catalog."default",
    CONSTRAINT assignment_history_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.branches
(
    id serial NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    address text COLLATE pg_catalog."default",
    region character varying(100) COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT branches_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.credentials
(
    id serial NOT NULL,
    person_id integer NOT NULL,
    username character varying(100) COLLATE pg_catalog."default" NOT NULL,
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    system system_type NOT NULL,
    notes text COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT credentials_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.departments
(
    id serial NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    CONSTRAINT departments_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.inks
(
    id serial NOT NULL,
    brand character varying(100) COLLATE pg_catalog."default" NOT NULL,
    model character varying(100) COLLATE pg_catalog."default" NOT NULL,
    color character varying(50) COLLATE pg_catalog."default" NOT NULL,
    quantity integer DEFAULT 0,
    ink_type character varying(50) COLLATE pg_catalog."default",
    purchase_date date,
    usage_date date,
    notes text COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT inks_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.people
(
    id serial NOT NULL,
    national_id character varying(20) COLLATE pg_catalog."default" NOT NULL,
    first_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    username character varying(50) COLLATE pg_catalog."default",
    password character varying(255) COLLATE pg_catalog."default",
    status person_status DEFAULT 'active'::person_status,
    department_id integer,
    role_id integer,
    branch_id integer,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT people_pkey PRIMARY KEY (id),
    CONSTRAINT people_national_id_key UNIQUE (national_id),
    CONSTRAINT people_username_key UNIQUE (username)
);

CREATE TABLE IF NOT EXISTS public.power_strips
(
    id serial NOT NULL,
    brand character varying(100) COLLATE pg_catalog."default",
    model character varying(100) COLLATE pg_catalog."default" NOT NULL,
    outlet_count integer,
    length_meters numeric(5, 2),
    color character varying(50) COLLATE pg_catalog."default",
    capacity integer,
    purchase_date date,
    usage_date date,
    notes text COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT power_strips_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.rj45_connectors
(
    id serial NOT NULL,
    model character varying(100) COLLATE pg_catalog."default" NOT NULL,
    quantity_units integer DEFAULT 0,
    material character varying(100) COLLATE pg_catalog."default",
    type character varying(50) COLLATE pg_catalog."default",
    purchase_date date,
    usage_date date,
    notes text COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT rj45_connectors_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.roles
(
    id serial NOT NULL,
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    CONSTRAINT roles_pkey PRIMARY KEY (id),
    CONSTRAINT roles_name_key UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.sim_cards
(
    id serial NOT NULL,
    asset_id integer NOT NULL,
    carrier character varying(100) COLLATE pg_catalog."default" NOT NULL,
    phone_number character varying(20) COLLATE pg_catalog."default" NOT NULL,
    plan_type sim_plan_type NOT NULL,
    status sim_status DEFAULT 'activo'::sim_status,
    activation_date date,
    notes text COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT sim_cards_pkey PRIMARY KEY (id),
    CONSTRAINT sim_cards_phone_number_key UNIQUE (phone_number)
);

CREATE TABLE IF NOT EXISTS public.storage_capacity
(
    id serial NOT NULL,
    asset_id integer NOT NULL,
    type storage_type NOT NULL,
    capacity_gb integer NOT NULL,
    notes text COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT storage_capacity_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.utp_cables
(
    id serial NOT NULL,
    brand character varying(100) COLLATE pg_catalog."default" NOT NULL,
    type utp_type NOT NULL,
    material character varying(100) COLLATE pg_catalog."default",
    length_meters integer DEFAULT 0,
    color character varying(50) COLLATE pg_catalog."default",
    purchase_date date,
    usage_date date,
    notes text COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT utp_cables_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.assets
    ADD CONSTRAINT assets_assigned_person_id_fkey FOREIGN KEY (assigned_person_id)
    REFERENCES public.people (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.assets
    ADD CONSTRAINT assets_branch_id_fkey FOREIGN KEY (branch_id)
    REFERENCES public.branches (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.assignment_history
    ADD CONSTRAINT assignment_history_asset_id_fkey FOREIGN KEY (asset_id)
    REFERENCES public.assets (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_assignment_asset
    ON public.assignment_history(asset_id);


ALTER TABLE IF EXISTS public.assignment_history
    ADD CONSTRAINT assignment_history_branch_id_fkey FOREIGN KEY (branch_id)
    REFERENCES public.branches (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.assignment_history
    ADD CONSTRAINT assignment_history_person_id_fkey FOREIGN KEY (person_id)
    REFERENCES public.people (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_assignment_person
    ON public.assignment_history(person_id);


ALTER TABLE IF EXISTS public.credentials
    ADD CONSTRAINT credentials_person_id_fkey FOREIGN KEY (person_id)
    REFERENCES public.people (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_credentials_person
    ON public.credentials(person_id);


ALTER TABLE IF EXISTS public.people
    ADD CONSTRAINT people_branch_id_fkey FOREIGN KEY (branch_id)
    REFERENCES public.branches (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.people
    ADD CONSTRAINT people_department_id_fkey FOREIGN KEY (department_id)
    REFERENCES public.departments (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.people
    ADD CONSTRAINT people_role_id_fkey FOREIGN KEY (role_id)
    REFERENCES public.roles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.sim_cards
    ADD CONSTRAINT sim_cards_asset_id_fkey FOREIGN KEY (asset_id)
    REFERENCES public.assets (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_sim_cards_asset
    ON public.sim_cards(asset_id);


ALTER TABLE IF EXISTS public.storage_capacity
    ADD CONSTRAINT storage_capacity_asset_id_fkey FOREIGN KEY (asset_id)
    REFERENCES public.assets (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;

END;
